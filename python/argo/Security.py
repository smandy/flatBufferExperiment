# automatically generated by the FlatBuffers compiler, do not modify

# namespace: argo

import flatbuffers

class Security(object):
    __slots__ = ['_tab']

    # Security
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Security
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # Security
    def Ric(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

    # Security
    def Ticker(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

def SecurityStart(builder): builder.StartObject(3)
def SecurityAddId(builder, id): builder.PrependUint64Slot(0, id, 0)
def SecurityAddRic(builder, ric): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(ric), 0)
def SecurityAddTicker(builder, ticker): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(ticker), 0)
def SecurityEnd(builder): return builder.EndObject()
